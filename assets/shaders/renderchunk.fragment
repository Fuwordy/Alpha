// Original file is property of the Mojang Team at Microsoft

varying lowp vec2 uv0; // coordinate on texture map
varying lowp vec2 uv1; // coordinate on light map
varying lowp vec4 color; // Color of grass, leaves, and ambient occlusion (block shadows)

// This macro is only defined when the distance is 16 or so blocks from the max render distance
// Because of that, do not rely on fogColor for anything other than fog!
#ifdef FOG
	varying lowp vec4 fogColor;
#endif

uniform sampler2D TEXTURE_0; // Block texture map
uniform sampler2D TEXTURE_1; // Light map

const lowp float tw = 1.0/32.0; // Amount of block textures that fit in the width
const lowp float th = 1.0/16.0; // Amount of block textures that fit in the height

void main()
{
	// Get what texture the UV coordinate is in (should probably use an int instead of using a float)
	lowp float texX = floor(uv0.x * 32.0);
	lowp float texY = floor(uv0.y * 16.0);

	lowp vec4 tex = texture2D( TEXTURE_0, uv0 );

	if((texY >= 11.0 && texX <= 1.0) || (texY == 10.0 && texX == 26.0)){
		tex.rgb *= vec3(0.5, 1.7, 1.7); // changes RGB values of the water
	}
	
	lowp vec4 light = texture2D( TEXTURE_1, uv1 );
	
	gl_FragColor = tex * light;
	
#ifdef ALPHA_TEST
	if(gl_FragColor.a < 0.5)
		discard;
#endif
	
	gl_FragColor *= color; // Adds the color of grass and leaves

#ifdef FOG
	gl_FragColor.rgb = mix(gl_FragColor.rgb, fogColor.rgb, fogColor.a);
#endif
}